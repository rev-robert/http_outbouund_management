<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sysevent_script_action">
    <sysevent_script_action action="INSERT_OR_UPDATE">
        <active>true</active>
        <condition_script/>
        <description/>
        <event_name>x_12232_http_mgmt.http_outbound.failure</event_name>
        <name>handleHTTPOutboundFailureEvent</name>
        <order>100</order>
        <script><![CDATA[handleEvent();

function handleEvent() {
	var logMsg = 'handleHTTPOutboundFailureEvent' + '\n';
	logMsg += 'event.sys_id = ' + event.sys_id.toString() + '\n' + 'current.sys_id = ' + current.sys_id.toString() + '\n';
	try {
		var intEventCountThreshold = gs.getProperty('x_12232_http_mgmt.http_outbound.failure.count');
		logMsg += 'intEventCountThreshold = ' + intEventCountThreshold.toString() + '\n';
		var intEventTimeThreshold = gs.getProperty('x_12232_http_mgmt.http_outbound.failure.threshold.time');
		logMsg += 'intEventTimeThreshold = ' + intEventTimeThreshold.toString() + '\n';
		var boolIgnoreEvent = false;
		var util = new x_12232_http_mgmt.utilHTTPOutboundManagement(current);
		logMsg += 'util (x_12232_http_mgmt.utilHTTPOutboundManagement) inititialized' + '\n';
		var grPreviousEvent = util.getPreviousEvent(current, event);
		logMsg += 'grPreviousEvent.getRowCount() = ' + grPreviousEvent.getRowCount() + '\n'; 
		if (grPreviousEvent.next()) {
			logMsg += 'grPreviousEvent.next()...' + '\n';
			logMsg += 'event.sys_created_on.getDisplayValue() = ' + event.sys_created_on.getDisplayValue() + '\n';
			var gdtEventCurrent = new GlideDateTime(event.sys_created_on.getDisplayValue());
			logMsg += 'gdtEventCurrent.getDisplayValue() = ' + gdtEventCurrent.getDisplayValue() + '\n';
			logMsg += 'grPreviousEvent.sys_created_on.getDisplayValue() = ' + grPreviousEvent.sys_created_on.getDisplayValue() + '\n';
			var gdtEventPrevious = newGlideDateTime(grPreviousEvent.sys_created_on.getDisplayValue());
			logMsg += 'gdtEventPrevious.getDisplayValue() = ' + gdtEventPrevious.getDisplayValue() + '\n';
			var durSincePreviousEvent = GlideDateTime.subtract(gdtEventPrevious, gdtEventCurrent);
			logMsg += 'durSincePreviousEvent = ' + durSincePreviousEvent.toString() + '\n';
			if (durSincePreviousEvent < intEventTimeThreshold) {
				boolIgnoreEvent = true;
			}  // if (durSincePreviousEvent > intEventTimeThreshold)
		}  // if (grPreviousEvent.next())
		logMsg += 'boolIgnoreEvent = ' + boolIgnoreEvent.toString() + '\n';
		if (!boolIgnoreEvent) {
			var sidMessage = '';
			var grIncident = util.generateIncident(current, event);
			logMsg += 'grIncident.sys_id = ' + grIncident.sys_id.toString() + '\n';
		}  // if (!boolIgnoreEvent)
	}  // try
	catch (err) {
		logMsg += 'Error:  ' + err.message + '\n';
	}  // catch
	finally {
		gs.info(logMsg);
	}  // finally
}  // handleEvent]]></script>
        <synchronous>false</synchronous>
        <sys_class_name>sysevent_script_action</sys_class_name>
        <sys_created_by>robert.polickoski</sys_created_by>
        <sys_created_on>2019-05-18 20:19:56</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>cf4e613cdbe1f3001b5cf7fdbf961978</sys_id>
        <sys_mod_count>9</sys_mod_count>
        <sys_name>handleHTTPOutboundFailureEvent</sys_name>
        <sys_overrides/>
        <sys_package display_value="HTTP_Outbound_Management" source="x_12232_http_mgmt">4669c39cdba1b3001b5cf7fdbf9619da</sys_package>
        <sys_policy/>
        <sys_scope display_value="HTTP_Outbound_Management">4669c39cdba1b3001b5cf7fdbf9619da</sys_scope>
        <sys_update_name>sysevent_script_action_cf4e613cdbe1f3001b5cf7fdbf961978</sys_update_name>
        <sys_updated_by>robert.polickoski</sys_updated_by>
        <sys_updated_on>2019-05-30 12:36:41</sys_updated_on>
    </sysevent_script_action>
</record_update>
